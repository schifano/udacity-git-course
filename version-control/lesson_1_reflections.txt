1. How did viewing a diff between two versions of a file help you see the bug that
was introduced?

	Viewing a diff between two versions of a file helped me see the bug in the code because it clearly marks where there are conflicts between the two files. There are special marker symbols as well. I did not have to waste time scanning through each line of code to find those differences.


cd ~                          # change directories to your home directory
mkdir version-control         # make version-control directory
cd version-control            # go to version-control directory
mkdir reflections             # create reflections directory
cd reflections                # go to reflections directory
subl lesson_1_reflections.txt # launch sublime with file called lesson_1_reflections.txt (you can replace subl with another editor here if you prefer a different one)
pwd # print working directory - shows what directory you are in
ls  # list the files in this directory

https://www.udacity.com/wiki/ud775/sublime



2. How could having easy access to the entire history of a file make you a more
efficient programmer in the long term?

	When a programmer looks at a file's history, he or she would be able to study and determine what standards or guidelines were preferred by the previous creators. It would also reveal historical logic, revealing what strategies were previously used and possibly why that logic was or was not kept. It could also help you understand the relevancy of the file. For example, perhaps the file was created a decade ago

What do you think are the pros and cons of manually choosing when to create a
commit, like you do in Git, vs having versions automatically saved, like Google
docs does?

    Fill in your answer here

Why do you think some version control systems, like Git, allow saving multiple
files in one commit, while others, like Google Docs, treat each file separately?

    Fill in your answer here

How can you use the commands git log and git diff to view the history of files?

    Fill in your answer here

How might using version control make you more confident to make changes that
could break something?

    Fill in your answer here

Now that you have your workspace set up, what do you want to try using Git for?

    Fill in your answer here